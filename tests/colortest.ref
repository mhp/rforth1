	processor pic18f248
	radix dec
	org 0x2000
	goto init_runtime
	org 0x2008
	reset
	org 0x2018
	reset

;---------------------------------------------------------
; Section: constants
;---------------------------------------------------------

TBLPTRU equ 0xff8

TBLPTRH equ 0xff7

TBLPTRL equ 0xff6

TABLAT equ 0xff5

INDF0 equ 0xfef

POSTINC0 equ 0xfee

POSTDEC0 equ 0xfed

PREINC0 equ 0xfec

PLUSW0 equ 0xfeb

FSR0H equ 0xfea

FSR0L equ 0xfe9

INDF1 equ 0xfe7

FSR1H equ 0xfe2

FSR1L equ 0xfe1

INDF2 equ 0xfdf

POSTDEC2 equ 0xfdd

PREINC2 equ 0xfdc

FSR2H equ 0xfda

FSR2L equ 0xfd9

STATUS equ 0xfd8

ADRESL equ 0xfc3

ADCON0 equ 0xfc2

ADCON1 equ 0xfc1

RCREG equ 0xfae

TXREG equ 0xfad

EEADR equ 0xfa9

EEDATA equ 0xfa8

EECON1 equ 0xfa6

PIR1 equ 0xf9e

;---------------------------------------------------------
; Section: code
;---------------------------------------------------------

disp0
	movlw LOW((disp0_str+0x8000))
	movwf PREINC0,0
	movlw HIGH((disp0_str+0x8000))
	movwf PREINC0,0
	movlw 10
	call type
	clrf PREINC0,0
	clrf PREINC0,0

an_
	call an
	call _

cr
	movlw 0xa
	call emit
	movlw 0xd
	goto emit

_
	call _1_GT_2
	call emit_8

emit_8
	call op_dup
	movf POSTDEC0,0,0
	swapf POSTINC0,1,0
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	andlw 0xf
	call emit_4
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	andlw 0xf

emit_4
	call nibble_to_hex

emit
	btfss PIR1,4,0
	bra emit
	movwf TXREG,0
	return

_8_ST_
	call _2_ST_
	call _2_ST_

_2_ST_
	bcf STATUS,0,0
	movf POSTDEC0,0,0
	rlcf POSTINC0,1,0
	rlcf INDF0,1,0
	return

flash_addr_EX_
	bcf INDF0,7,0
	bsf EECON1,7,0

table_addr_EX_
	clrf TBLPTRU,0
	call _1_GT_2
	movf POSTDEC0,0,0
	movff POSTDEC0,TBLPTRH
	movf POSTDEC0,0,0
	movff POSTDEC0,TBLPTRL
	bcf EECON1,6,0
	return

an
	call select_channel

measure
	bsf ADCON0,2,0
_lbl___450
	btfsc ADCON0,2,0
	bra _lbl___450
	movff ADRESL,PREINC0
	movff (ADRESL+1),PREINC0
	return

init_runtime
	movlw 0x5f
	movwf FSR0L,0
	clrf FSR0H,0
	movlw 0xbf
	movwf FSR2L,0
	clrf FSR2H,0

main
	movlw LOW((main_str+0x8000))
	movwf PREINC0,0
	movlw HIGH((main_str+0x8000))
	movwf PREINC0,0
	movlw 7
	call type
	call cr
	call init_adc
_lbl___466
	call key
	call disp0
	call disp1
	call disp2
	bra _lbl___466

disp1
	movlw LOW((disp1_str+0x8000))
	movwf PREINC0,0
	movlw HIGH((disp1_str+0x8000))
	movwf PREINC0,0
	movlw 10
	call type
	movlw 1
	movwf PREINC0,0
	clrf PREINC0,0
	goto an_

disp2
	movlw LOW((disp2_str+0x8000))
	movwf PREINC0,0
	movlw HIGH((disp2_str+0x8000))
	movwf PREINC0,0
	movlw 10
	call type
	movlw 2
	movwf PREINC0,0
	clrf PREINC0,0
	goto an_

op_dup
	movlw -1
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	return

op_cfetch_tos
	btfsc INDF0,7,0
	goto flashc_AT_
	btfsc INDF0,4,0
	goto eepromc_AT_
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff INDF1,PREINC0
	clrf PREINC0,0
	return

or
	movff POSTDEC0,temp_x1
	movf POSTDEC0,0,0
	movf POSTDEC0,1,0
	iorwf POSTINC0,1,0
	movf temp_x1,0,0
	iorwf INDF0,1,0
	return

_1_GT_2
	movf INDF0,0,0
	clrf INDF0,0
	movwf PREINC0,0
	clrf PREINC0,0
	return

flashc_AT_
	call flash_addr_EX_
	tblrd*+
	movff TABLAT,PREINC0
	clrf PREINC0,0
	return

eeprom_addr_EX_
	movwf EEADR,0
	bcf EECON1,7,0
	bcf EECON1,6,0
	return

eepromc_AT_
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	call eeprom_addr_EX_
	bsf EECON1,0,0
	movff EEDATA,PREINC0
	clrf PREINC0,0
	return

nibble_to_hex
	addlw 0xf6
	btfsc STATUS,0,0
	addlw 7
	addlw 0x3a
	return

type
	movwf PREINC2,0
	iorlw 0
	bz _lbl___250
_lbl___252
	call op_dup
	call op_cfetch_tos
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	call emit
	movf POSTDEC0,0,0
	infsnz POSTINC0,1,0
	incf INDF0,1,0
	decfsz INDF2,1,0
	bra _lbl___252
_lbl___250
	movf POSTDEC2,1,0
	movf POSTDEC0,0,0
	movf POSTDEC0,0,0
	return

key
	btfss PIR1,5,0
	bra key
	movf RCREG,0,0
	return

select_channel
	call _8_ST_
	movf ADCON0,0,0
	andlw 0xc7
	movwf PREINC0,0
	clrf PREINC0,0
	call or
	movf POSTDEC0,0,0
	movff POSTDEC0,ADCON0
	return

init_adc
	movlw 0x81
	movwf ADCON0,0
	movlw 0xc2
	movwf ADCON1,0
	return

;---------------------------------------------------------
; Section: memory
;---------------------------------------------------------

temp_x1 equ 0x0

;---------------------------------------------------------
; Section: static data
;---------------------------------------------------------

disp0_str
	db 83,101,110,115,111,114,32,48
	db 58,32

disp1_str
	db 83,101,110,115,111,114,32,49
	db 58,32

disp2_str
	db 83,101,110,115,111,114,32,50
	db 58,32

main_str
	db 87,101,108,99,111,109,101

END
